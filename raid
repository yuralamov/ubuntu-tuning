# RAID0 из 2х жестких дисков
# По экспериментам быстрее работают на mdadm, при 32 гигов памяти хоста
# Настройки mdadm подобрал экспериментально
# Можно использовать для дисков неформатированные разделы lvm. В virt-manager в xml тупо указать /dev/vg01/lv_w11
lsblk -o NAME,SIZE,FSTYPE,TYPE,MOUNTPOINT
sudo fdisk -l
sudo blkid
cat /proc/mdstat
sudo umount /dev/md127
sudo mdadm --stop /dev/md127
sudo mdadm --zero-superblock /dev/{sdb,sdc}
sudo wipefs --all --force /dev/sd{b,c}
sudo nano /etc/fstab
sudo nano /etc/mdadm/mdadm.conf
sudo update-initramfs -u

##MDADM
# https://www.digitalocean.com/community/tutorials/how-to-create-raid-arrays-with-mdadm-on-ubuntu-18-04
sudo apt install -y mdadm
sudo mdadm --create --verbose /dev/md127 --chunk=128 --level=0 --raid-devices=2 /dev/sd{b,c}
sudo mkfs.ext4 -b 4096 -E stride=32,stripe-width=64 /dev/md127
sudo mount /dev/md127 /srv
df -h -x devtmpfs -x tmpfs
sudo mdadm --detail --scan | sudo tee -a /etc/mdadm/mdadm.conf
sudo update-initramfs -u
echo '/dev/md127 /srv ext4 defaults,nofail,discard 0 0' | sudo tee -a /etc/fstab
# Если установка на mdadm
cd где_смонтирован_корень_устанавливаемой
sudo mount --bind /dev dev
sudo mount --bind /proc proc
sudo mount --bind /sys sys
sudo chroot .
# если нет ping ubuntu.com
echo "nameserver 8.8.8.8" >> /etc/resolv.conf
apt install mdadm

##LVM
# https://losst.ru/sozdanie-i-nastrojka-lvm-linux
# https://www.dmosk.ru/instruktions.php?object=lvm
sudo apt install lvm2
sudo pvcreate /dev/sdb /dev/sdc
sudo pvscan
sudo pvdisplay

sudo vgcreate vg01 /dev/sdb /dev/sdc
sudo vgdisplay 

sudo lvcreate -i2 -I64 -L120G -n lv_w11 vg01
sudo lvdisplay 

# Обратиться к устройствам
/dev/vg01/lv_w11 или /dev/dm-0 или /dev/mapper/vg01-lv_w22


## Продолжение LVM с кэшированием (безбожно жрет SSD)
# Это подобие встроенного кэша хард RAID контроллера
# плюс функции пользовательского и системного кэша
# Вы и система работаете с кэшем на ssd, на который при необходимости
# подгружаются данные с медленного HDD
# /dev/sda - hdd рабочий диск
# /dev/sdb - ssd для тепленького кэша hdd 
# остаются последние и далее частые, может зря на весь корень, но пойдет
# Все делаем из root (sudo su -)
# Инициализируем диски
wipefs --all --force /dev/sd{a,b,c}
fdisk /dev/sda
# Делаем gpt, раздел 1 - 512M efi, 2 - 1G boot, 3 - 4G swap, 4- остаток, записываем
fdisk /dev/sdb
# gpt, /dev/sdb1
pvcreate /dev/sda4
pvcreate /dev/sdb1
vgcreate vg01 /dev/sda4 /dev/sdb1
# Создаем root
lvcreate -l 80%FREE -n lv_root vg01 /dev/sda4
# Делаем разделы для кэша
lvcreate -L 4G -n lv_meta vg01 /dev/sdb1
lvcreate -l 90%FREE -n lv_data vg01 /dev/sdb1
# Конвертируем разделы
lvconvert --type cache-pool --poolmetadata vg01/lv_meta vg01/lv_data
# Собираем кэш
lvconvert --type cache --cachemode writeback --cachepool vg01/lv_data vg01/lv_root
lvs -a
# Далле установка как полагается /dev/sda1 - efi, /dev/sda2 - boot, /dev/sda3 - swap, vg01-lv_data - root
# Загрузка /dev/sda


## RAID0 средствами btrfs установщик ubuntu-desktop выдает ошибку. На Arch работает.
mkfs.btrfs -L bt_root -d raid0 -m raid0 -f /dev/sda3 /dev/sdb2

## Замена кэширующего диска
## Отключаем кэш - убираем диск
lvconvert --uncache /dev/vg01/vl_root
lvremove /dev/vg01/lv_meta
vgreduce vg01 /dev/sdb
pvremove /dev/sdb

## Выключаем-отключаем_диск-подключаем_на_замену-включаем
fdisk /dev/sdb
# gpt, /dev/sdb1
pvcreate /dev/sdb1
lvcreate -L 4G -n lv_meta vg01 /dev/sdb1
lvcreate -l 90%FREE -n lv_data vg01 /dev/sdb1
lvconvert --type cache-pool --poolmetadata vg01/lv_meta vg01/lv_data
lvconvert --type cache --cachemode writeback --cachepool vg01/lv_data vg01/lv_root
